# Chess Game in C++

A terminal-based chess engine implemented in C++.  
This project simulates a complete game of chess with move validation, piece-specific rules, and a text-based visualization of the board.  

Developed collaboratively as a team project. See **Contributions** below for details on my role.  

---

## Features
- **Full rules of chess**: legal moves for all pieces, captures, alternating turns.
- **Object-Oriented Design**: each piece (`Pawn`, `Rook`, `Bishop`, `Knight`, `Queen`, `King`) is encapsulated in its own class with specialized movement logic.
- **Game & Board Management**: centralized `Game` and `Board` classes track state, validate moves, and manage turn order.
- **Command Interface**: play via terminal commands (`M e2e4` for moves, `Q` to quit, `S` to save, `L` to load).
- **Exception Handling** for invalid moves and user input.
- **UML Design Diagram** included (`docs/chessUML.pdf`).
- **Makefile Support** for simple compilation.

---

## Demo

Below is an example of gameplay. The move shown is **E2 to E4**, known as the *King’s Pawn Opening* — the most common opening in chess.

![Chess Demo 1](docs/demo1.png)  

![Alt text](docs/demo1.png?raw=true "Optional Title")

![Chess Demo 2](docs/demo2.png)

---

## File Structure


